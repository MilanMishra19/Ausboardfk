{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mishr/OneDrive/Desktop/ausboard/app/dashboard/projects/testcases/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useCallback } from 'react';\r\nimport JsonView from '@uiw/react-json-view';\r\n\r\n// It's assumed that the custom CSS for .glow-border and .glow-on-hover\r\n// (as provided in the previous turn) is available in your global stylesheet.\r\n\r\nexport default function Testcases() {\r\n  // State for each form field\r\n  const [endpoint, setEndpoint] = useState('');\r\n  const [method, setMethod] = useState('');\r\n  const [expectedStatus, setExpectedStatus] = useState('');\r\n  const [headers, setHeaders] = useState({}); // Initialize as empty object for JSON\r\n  const [requestBody, setRequestBody] = useState({}); // Initialize as empty object for JSON\r\n  const [expectedResponseBody, setExpectedResponseBody] = useState({}); // Initialize as empty object for JSON\r\n  const [expectedHeaders, setExpectedHeaders] = useState({}); // Initialize as empty object for JSON\r\n\r\n  // Handler for standard input fields\r\n  const handleInputChange = useCallback((setter) => (e) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n\r\n  // Handler for JsonView component changes\r\n  // The onEdit prop of @uiw/react-json-view provides an object with 'json' (parsed object) and 'value' (JSON string)\r\n  const handleJsonViewChange = useCallback((setter) => ({ json }) => {\r\n    setter(json);\r\n  }, []);\r\n\r\n  // Form submission handler\r\n  const handleSubmit = useCallback((e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n\r\n    // Construct the test case object\r\n    const testCase = {\r\n      endpoint,\r\n      method,\r\n      expectedStatus: expectedStatus ? parseInt(expectedStatus, 10) : undefined, // Parse to number\r\n      headers,\r\n      requestBody,\r\n      expectedResponseBody,\r\n      expectedHeaders,\r\n    };\r\n\r\n    // Log the test case data to the console (you would typically send this to an API)\r\n    console.log('Test Case Data:', testCase);\r\n\r\n    // You can add logic here to send this data to your backend API,\r\n    // display a success message, or clear the form.\r\n    alert('Test case created! Check console for data.'); // Using alert for demonstration, replace with custom UI\r\n    // For a real app, replace alert() with a custom modal or toast notification\r\n    // Example: showCustomModal('Test case created successfully!');\r\n\r\n    // Optionally, clear the form after submission\r\n    // setEndpoint('');\r\n    // setMethod('');\r\n    // setExpectedStatus('');\r\n    // setHeaders({});\r\n    // setRequestBody({});\r\n    // setExpectedResponseBody({});\r\n    // setExpectedHeaders({});\r\n\r\n  }, [endpoint, method, expectedStatus, headers, requestBody, expectedResponseBody, expectedHeaders]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-8 bg-black text-gray-100 font-inter\">\r\n      {/* Main Container for the form, centered on the screen */}\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"space-y-6 p-8 bg-gradient-to-br from-black to-gray-950 rounded-lg shadow-2xl border border-red-900/40 relative overflow-hidden max-w-2xl w-full\"\r\n      >\r\n        {/* Background Glow Overlay */}\r\n        {/* This div creates a subtle radial glow effect behind the form content */}\r\n        <div\r\n          className=\"absolute inset-0 z-0 opacity-20 pointer-events-none\"\r\n          style={{ background: 'radial-gradient(circle at center, rgba(255, 0, 0, 0.1), transparent 70%)' }}\r\n        ></div>\r\n\r\n        {/* Endpoint Input */}\r\n        <div className=\"relative z-10\"> {/* Ensure content is above the glow overlay */}\r\n          <label htmlFor=\"endpoint-url\" className=\"sr-only\">Endpoint URL</label>\r\n          <input\r\n            id=\"endpoint-url\"\r\n            type=\"text\"\r\n            placeholder=\"Endpoint URL\"\r\n            value={endpoint}\r\n            onChange={handleInputChange(setEndpoint)}\r\n            className=\"w-full rounded-md p-3 bg-gray-900 text-gray-100 border border-red-700 focus:border-red-500 focus:ring focus:ring-red-500 focus:ring-opacity-40 transition duration-300 ease-in-out placeholder-gray-500 text-lg glow-border\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Method + Status Code Inputs */}\r\n        <div className=\"flex flex-col sm:flex-row gap-5 justify-between w-full relative z-10\">\r\n          {/* HTTP Method Select */}\r\n          <div className=\"w-full sm:w-1/2\">\r\n            <label htmlFor=\"http-method\" className=\"sr-only\">Select HTTP Method</label>\r\n            <select\r\n              id=\"http-method\"\r\n              value={method}\r\n              onChange={handleInputChange(setMethod)}\r\n              className=\"w-full rounded-md p-3 bg-gray-900 text-gray-100 border border-red-700 focus:border-red-500 focus:ring focus:ring-red-500 focus:ring-opacity-40 transition duration-300 ease-in-out appearance-none cursor-pointer text-lg glow-border\"\r\n              required\r\n            >\r\n              <option value=\"\" className=\"bg-gray-800 text-gray-400\">Select HTTP Method</option>\r\n              <option value=\"GET\" className=\"bg-gray-800 text-gray-200\">GET</option>\r\n              <option value=\"POST\" className=\"bg-gray-800 text-gray-200\">POST</option>\r\n              <option value=\"PUT\" className=\"bg-gray-800 text-gray-200\">PUT</option>\r\n              <option value=\"DELETE\" className=\"bg-gray-800 text-gray-200\">DELETE</option>\r\n              <option value=\"PATCH\" className=\"bg-gray-800 text-gray-200\">PATCH</option>\r\n            </select>\r\n          </div>\r\n          {/* Expected Status Code Input */}\r\n          <div className=\"w-full sm:w-1/2\">\r\n            <label htmlFor=\"expected-status\" className=\"sr-only\">Expected Status Code</label>\r\n            <input\r\n              id=\"expected-status\"\r\n              type=\"number\"\r\n              placeholder=\"Expected Status Code (e.g., 200)\"\r\n              value={expectedStatus}\r\n              onChange={handleInputChange(setExpectedStatus)}\r\n              className=\"w-full rounded-md p-3 bg-gray-900 text-gray-100 border border-red-700 focus:border-red-500 focus:ring focus:ring-red-500 focus:ring-opacity-40 transition duration-300 ease-in-out placeholder-gray-500 text-lg glow-border\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Headers JSON Input */}\r\n        <div className=\"relative z-10\">\r\n          <label htmlFor=\"headers-json\" className=\"text-white font-semibold mb-2 block\">Headers (JSON)</label>\r\n          <JsonView\r\n            id=\"headers-json\"\r\n            value={headers} // Pass the state variable\r\n            onEdit={handleJsonViewChange(setHeaders)} // Handle changes\r\n            contentEditable\r\n            className=\"w-full min-h-[100px] rounded-md p-3 bg-gray-900 text-gray-100 border border-red-700 focus:border-red-500 focus:ring focus:ring-red-500 focus:ring-opacity-40 transition duration-300 ease-in-out glow-border\"\r\n            // Ensure JsonView's internal theme matches\r\n            style={{ backgroundColor: 'transparent', color: '#e5e7eb' }} // Override specific internal styles\r\n          />\r\n        </div>\r\n\r\n        {/* Request Body JSON Input */}\r\n        <div className=\"relative z-10\">\r\n          <label htmlFor=\"request-body-json\" className=\"text-white font-semibold mb-2 block\">Request Body (JSON)</label>\r\n          <JsonView\r\n            id=\"request-body-json\"\r\n            value={requestBody}\r\n            onEdit={handleJsonViewChange(setRequestBody)}\r\n            contentEditable\r\n            className=\"w-full min-h-[100px] rounded-md p-3 bg-gray-900 text-gray-100 border border-red-700 focus:border-red-500 focus:ring focus:ring-red-500 focus:ring-opacity-40 transition duration-300 ease-in-out glow-border\"\r\n            style={{ backgroundColor: 'transparent', color: '#e5e7eb' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Expected Response Body JSON Input */}\r\n        <div className=\"relative z-10\">\r\n          <label htmlFor=\"expected-response-body-json\" className=\"text-white font-semibold mb-2 block\">Expected Response Body (JSON)</label>\r\n          <JsonView\r\n            id=\"expected-response-body-json\"\r\n            value={expectedResponseBody}\r\n            onEdit={handleJsonViewChange(setExpectedResponseBody)}\r\n            contentEditable\r\n            className=\"w-full min-h-[100px] rounded-md p-3 bg-gray-900 text-gray-100 border border-red-700 focus:border-red-500 focus:ring focus:ring-red-500 focus:ring-opacity-40 transition duration-300 ease-in-out glow-border\"\r\n            style={{ backgroundColor: 'transparent', color: '#e5e7eb' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Expected Headers JSON Input */}\r\n        <div className=\"relative z-10\">\r\n          <label htmlFor=\"expected-headers-json\" className=\"text-white font-semibold mb-2 block\">Expected Headers (JSON)</label>\r\n          <JsonView\r\n            id=\"expected-headers-json\"\r\n            value={expectedHeaders}\r\n            onEdit={handleJsonViewChange(setExpectedHeaders)}\r\n            contentEditable\r\n            className=\"w-full min-h-[100px] rounded-md p-3 bg-gray-900 text-gray-100 border border-red-700 focus:border-red-500 focus:ring focus:ring-red-500 focus:ring-opacity-40 transition duration-300 ease-in-out glow-border\"\r\n            style={{ backgroundColor: 'transparent', color: '#e5e7eb' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full py-3 bg-gradient-to-r from-red-800 to-red-600 text-white rounded-full hover:from-red-700 hover:to-red-500 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-75 transition duration-300 ease-in-out text-xl font-bold tracking-wide transform hover:scale-105 active:scale-100 glow-on-hover relative z-10\"\r\n        >\r\n          Create Test Case\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AAAA;;;AAFA;;;AAOe,SAAS;;IACtB,4BAA4B;IAC5B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,IAAI,sCAAsC;IAClF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,IAAI,sCAAsC;IAC1F,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,IAAI,sCAAsC;IAC5G,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,IAAI,sCAAsC;IAElG,oCAAoC;IACpC,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oDAAE,CAAC;4DAAW,CAAC;oBACjD,OAAO,EAAE,MAAM,CAAC,KAAK;gBACvB;;mDAAG,EAAE;IAEL,yCAAyC;IACzC,mHAAmH;IACnH,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE,CAAC;+DAAW;wBAAC,EAAE,IAAI,EAAE;oBAC5D,OAAO;gBACT;;sDAAG,EAAE;IAEL,0BAA0B;IAC1B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CAAE,CAAC;YAChC,EAAE,cAAc,IAAI,2CAA2C;YAE/D,iCAAiC;YACjC,MAAM,WAAW;gBACf;gBACA;gBACA,gBAAgB,iBAAiB,SAAS,gBAAgB,MAAM;gBAChE;gBACA;gBACA;gBACA;YACF;YAEA,kFAAkF;YAClF,QAAQ,GAAG,CAAC,mBAAmB;YAE/B,gEAAgE;YAChE,gDAAgD;YAChD,MAAM,+CAA+C,wDAAwD;QAC7G,4EAA4E;QAC5E,+DAA+D;QAE/D,8CAA8C;QAC9C,mBAAmB;QACnB,iBAAiB;QACjB,yBAAyB;QACzB,kBAAkB;QAClB,sBAAsB;QACtB,+BAA+B;QAC/B,0BAA0B;QAE5B;8CAAG;QAAC;QAAU;QAAQ;QAAgB;QAAS;QAAa;QAAsB;KAAgB;IAElG,qBACE,6LAAC;QAAI,WAAU;kBAEb,cAAA,6LAAC;YACC,UAAU;YACV,WAAU;;8BAIV,6LAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,YAAY;oBAA2E;;;;;;8BAIlG,6LAAC;oBAAI,WAAU;;wBAAgB;sCAC7B,6LAAC;4BAAM,SAAQ;4BAAe,WAAU;sCAAU;;;;;;sCAClD,6LAAC;4BACC,IAAG;4BACH,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,kBAAkB;4BAC5B,WAAU;4BACV,QAAQ;;;;;;;;;;;;8BAKZ,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,SAAQ;oCAAc,WAAU;8CAAU;;;;;;8CACjD,6LAAC;oCACC,IAAG;oCACH,OAAO;oCACP,UAAU,kBAAkB;oCAC5B,WAAU;oCACV,QAAQ;;sDAER,6LAAC;4CAAO,OAAM;4CAAG,WAAU;sDAA4B;;;;;;sDACvD,6LAAC;4CAAO,OAAM;4CAAM,WAAU;sDAA4B;;;;;;sDAC1D,6LAAC;4CAAO,OAAM;4CAAO,WAAU;sDAA4B;;;;;;sDAC3D,6LAAC;4CAAO,OAAM;4CAAM,WAAU;sDAA4B;;;;;;sDAC1D,6LAAC;4CAAO,OAAM;4CAAS,WAAU;sDAA4B;;;;;;sDAC7D,6LAAC;4CAAO,OAAM;4CAAQ,WAAU;sDAA4B;;;;;;;;;;;;;;;;;;sCAIhE,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,SAAQ;oCAAkB,WAAU;8CAAU;;;;;;8CACrD,6LAAC;oCACC,IAAG;oCACH,MAAK;oCACL,aAAY;oCACZ,OAAO;oCACP,UAAU,kBAAkB;oCAC5B,WAAU;;;;;;;;;;;;;;;;;;8BAMhB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAM,SAAQ;4BAAe,WAAU;sCAAsC;;;;;;sCAC9E,6LAAC,iLAAA,CAAA,UAAQ;4BACP,IAAG;4BACH,OAAO;4BACP,QAAQ,qBAAqB;4BAC7B,eAAe;4BACf,WAAU;4BACV,2CAA2C;4BAC3C,OAAO;gCAAE,iBAAiB;gCAAe,OAAO;4BAAU;;;;;;;;;;;;8BAK9D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAM,SAAQ;4BAAoB,WAAU;sCAAsC;;;;;;sCACnF,6LAAC,iLAAA,CAAA,UAAQ;4BACP,IAAG;4BACH,OAAO;4BACP,QAAQ,qBAAqB;4BAC7B,eAAe;4BACf,WAAU;4BACV,OAAO;gCAAE,iBAAiB;gCAAe,OAAO;4BAAU;;;;;;;;;;;;8BAK9D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAM,SAAQ;4BAA8B,WAAU;sCAAsC;;;;;;sCAC7F,6LAAC,iLAAA,CAAA,UAAQ;4BACP,IAAG;4BACH,OAAO;4BACP,QAAQ,qBAAqB;4BAC7B,eAAe;4BACf,WAAU;4BACV,OAAO;gCAAE,iBAAiB;gCAAe,OAAO;4BAAU;;;;;;;;;;;;8BAK9D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAM,SAAQ;4BAAwB,WAAU;sCAAsC;;;;;;sCACvF,6LAAC,iLAAA,CAAA,UAAQ;4BACP,IAAG;4BACH,OAAO;4BACP,QAAQ,qBAAqB;4BAC7B,eAAe;4BACf,WAAU;4BACV,OAAO;gCAAE,iBAAiB;gCAAe,OAAO;4BAAU;;;;;;;;;;;;8BAK9D,6LAAC;oBACC,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;GArLwB;KAAA","debugId":null}}]
}